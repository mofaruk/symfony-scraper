version: "3.8"

services:
  webserver:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - ./nginx/conf/sym-scrapper.conf:/etc/nginx/conf.d/default.conf
    - ../app:/var/www
    links:
    - app
    networks:
    - app-network

  app:
    build:
      context: ./php
    container_name: app
    working_dir: /var/www
    volumes:
    - ../app:/var/www
    depends_on:
    - mysql
    networks:
    - app-network

  mysql:
    image: mysql:8
    container_name: mysql
    restart: unless-stopped
    env_file:
    - ./mysql/.env
    volumes:
    - ./mysql/conf:/etc/mysql/conf.d
    - ./mysql/data:/var/lib/mysql
    - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
    - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    hostname: rmq
    ports:
    - "5672:5672"
    - "15672:15672"
    volumes:
    - ./rabbitmq/data/:/var/lib/rabbitmq
    env_file:
    - ./rabbitmq/.env
    networks:
    - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass $$REDIS_PASS
    volumes:
    - ./redis/data:/usr/local/etc/redis
    env_file:
    - ./redis/.env
    networks:
    - app-network


networks:
  app-network:
    driver: bridge
